// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package org.xebia.conference.view.gwt.client.managed.activity;

import com.google.gwt.activity.shared.Activity;
import com.google.gwt.place.shared.PlaceController;
import com.google.web.bindery.requestfactory.shared.EntityProxyId;
import com.google.web.bindery.requestfactory.shared.RequestContext;
import java.util.Set;
import org.xebia.conference.view.gwt.client.managed.request.ApplicationRequestFactory;
import org.xebia.conference.view.gwt.client.managed.ui.SpeakerDetailsView;
import org.xebia.conference.view.gwt.client.managed.ui.SpeakerEditView;
import org.xebia.conference.view.gwt.client.managed.ui.SpeakerListView;
import org.xebia.conference.view.gwt.client.managed.ui.SpeakerMobileDetailsView;
import org.xebia.conference.view.gwt.client.managed.ui.SpeakerMobileEditView;
import org.xebia.conference.view.gwt.client.managed.ui.TalkSetEditor;
import org.xebia.conference.view.gwt.client.proxy.SpeakerProxy;
import org.xebia.conference.view.gwt.client.proxy.TalkProxy;
import org.xebia.conference.view.gwt.client.request.SpeakerRequest;
import org.xebia.conference.view.gwt.client.scaffold.ScaffoldApp;
import org.xebia.conference.view.gwt.client.scaffold.place.CreateAndEditProxy;
import org.xebia.conference.view.gwt.client.scaffold.place.FindAndEditProxy;
import org.xebia.conference.view.gwt.client.scaffold.place.ProxyPlace;

public abstract class SpeakerActivitiesMapper_Roo_Gwt {

    protected ApplicationRequestFactory requests;

    protected PlaceController placeController;

    protected Activity makeCreateActivity() {
        SpeakerEditView.instance().setCreating(true);
        final SpeakerRequest request = requests.speakerRequest();
        Activity activity = new CreateAndEditProxy<SpeakerProxy>(SpeakerProxy.class, request, ScaffoldApp.isMobile() ? SpeakerMobileEditView.instance() : SpeakerEditView.instance(), placeController) {

            @Override
            protected RequestContext createSaveRequest(SpeakerProxy proxy) {
                request.saveSpeaker(proxy);
                return request;
            }
        };
        return new SpeakerEditActivityWrapper(requests, ScaffoldApp.isMobile() ? SpeakerMobileEditView.instance() : SpeakerEditView.instance(), activity, null);
    }

    @SuppressWarnings("unchecked")
    protected EntityProxyId<org.xebia.conference.view.gwt.client.proxy.SpeakerProxy> coerceId(ProxyPlace place) {
        return (EntityProxyId<SpeakerProxy>) place.getProxyId();
    }

    protected Activity makeEditActivity(ProxyPlace place) {
        SpeakerEditView.instance().setCreating(false);
        EntityProxyId<SpeakerProxy> proxyId = coerceId(place);
        Activity activity = new FindAndEditProxy<SpeakerProxy>(proxyId, requests, ScaffoldApp.isMobile() ? SpeakerMobileEditView.instance() : SpeakerEditView.instance(), placeController) {

            @Override
            protected RequestContext createSaveRequest(SpeakerProxy proxy) {
                SpeakerRequest request = requests.speakerRequest();
                request.saveSpeaker(proxy);
                return request;
            }
        };
        return new SpeakerEditActivityWrapper(requests, ScaffoldApp.isMobile() ? SpeakerMobileEditView.instance() : SpeakerEditView.instance(), activity, proxyId);
    }
}
